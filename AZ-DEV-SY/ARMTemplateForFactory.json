{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "az-dev-sy"
		},
		"AZ_AdvantureWorks_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_AdvantureWorks'"
		},
		"BlobSource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobSource'"
		},
		"DestAzure_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('Incremental-', pipeline().RunId, '.txt')"
		},
		"DestAzure_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "adfpractise"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AdfIncPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OldWaterMarkLookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"dataset": {
								"referenceName": "AzureSqlDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "NewWaterMarkLookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select MAX(LastModifytime) as NewWatermarkvalue from data_source_table"
							},
							"dataset": {
								"referenceName": "SourceAzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyInc",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "OldWaterMarkLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NewWaterMarkLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from data_source_tabl where LastModifytime > '@{activity('OldWaterMarkLookup').output.firstRow.WatermarkValue}' and LastModifytime <= '@{activity('NewWaterMarkLookup').output.firstRow.NewWatermarkvalue}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceAzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestAzure",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UpdateWaterMarkTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyInc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_write_watermark]')]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('NewWaterMarkLookup').output.firstRow.NewWatermarkvalue}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@{activity('OldWaterMarkLookup').output.firstRow.TableName}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AZ_AdvantureWorks",
							"type": "LinkedServiceReference",
							"parameters": {
								"ServerName": "sydev.database.windows.net",
								"DBName": "SY",
								"UserName": "syuser",
								"Password": "Zensar@18"
							}
						}
					},
					{
						"name": "SuccessEmail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "UpdateWaterMarkTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-46.eastus.logic.azure.com:443/workflows/1ff97b95273f49acaf626ed17d2bb8db/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=eiVyusoO8xsD3jeqHtNAsl8sdgJcjHpuU_RED3YymZU",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "@{activity('CopyInc').output.dataWritten}",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "FailureEmail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "UpdateWaterMarkTable",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-30.eastus.logic.azure.com:443/workflows/21ab6c507a8c41f0861275c0fa342e36/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=N2znDHb_6x34WfB_7XXlI5Zh_Sf5VpfR2DMguNKs9fU",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "@{activity('CopyInc').error.message}",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyInc",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-30.eastus.logic.azure.com:443/workflows/21ab6c507a8c41f0861275c0fa342e36/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=N2znDHb_6x34WfB_7XXlI5Zh_Sf5VpfR2DMguNKs9fU",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "@{activity('CopyInc').error.message}",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					}
				],
				"parameters": {
					"receiver": {
						"type": "String",
						"defaultValue": "madhav.ganji@gmail.com"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDB')]",
				"[concat(variables('factoryId'), '/datasets/SourceAzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DestAzure')]",
				"[concat(variables('factoryId'), '/linkedServices/AZ_AdvantureWorks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParameterizedFactory')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CompanyBikeCustomer",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "@pipeline().parameters.SourceQuery",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "truncate table dbo.customer"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"CustomerID": "CustomerID",
									"FirstName": "FirstName",
									"LastName": "LastName",
									"CompanyName": "CompanyName"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdvantureWorks",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SuccessMail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CompanyBikeCustomer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-46.eastus.logic.azure.com:443/workflows/1ff97b95273f49acaf626ed17d2bb8db/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=eiVyusoO8xsD3jeqHtNAsl8sdgJcjHpuU_RED3YymZU",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "@{activity('CompanyBikeCustomer').output.dataWritten}",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "FailureMail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CompanyBikeCustomer",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-30.eastus.logic.azure.com:443/workflows/21ab6c507a8c41f0861275c0fa342e36/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=N2znDHb_6x34WfB_7XXlI5Zh_Sf5VpfR2DMguNKs9fU",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "@{activity('CompanyBikeCustomer').error.message}",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					}
				],
				"parameters": {
					"SourceQuery": {
						"type": "String",
						"defaultValue": "select CustomerID,FirstName,LastName,CompanyName from SalesLT.customer where CompanyName like '%Bike%'"
					},
					"receiver": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdvantureWorks')]",
				"[concat(variables('factoryId'), '/datasets/customer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParentPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CallParameterPipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ParameterizedFactory",
								"type": "PipelineReference"
							}
						}
					},
					{
						"name": "CallIncPipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CallParameterPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AdfIncPipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ParameterizedFactory')]",
				"[concat(variables('factoryId'), '/pipelines/AdfIncPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdvantureWorks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_AdvantureWorks",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "CustomerID",
						"type": "Int32"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'SalesLT].[Customer]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_AdvantureWorks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_AdvantureWorks",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": "sydev.database.windows.net",
						"DBName": "SY",
						"UserName": "syuser",
						"Password": "Zensar@18"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[watermarktable]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_AdvantureWorks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestAzure')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobSource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('DestAzure_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('DestAzure_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceAzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_AdvantureWorks",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": "sydev.database.windows.net",
						"DBName": "SY",
						"UserName": "syuser",
						"Password": "Zensar@18"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[data_source_table]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_AdvantureWorks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_AdvantureWorks",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "CustomerID",
						"type": "Int32"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[customer]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_AdvantureWorks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_AdvantureWorks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ServerName": {
						"type": "String",
						"defaultValue": "sydev.database.windows.net"
					},
					"DBName": {
						"type": "String",
						"defaultValue": "SY"
					},
					"UserName": {
						"type": "String",
						"defaultValue": "syuser"
					},
					"Password": {
						"type": "String",
						"defaultValue": "Zensar@18"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AZ_AdvantureWorks_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobSource_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}